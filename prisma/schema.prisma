// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Marca {
    id String @id @db.VarChar(20)
    modelo Modelo []

    @@map("marca")
}

model Modelo {
    id Int @id @default(autoincrement())
    nome String @db.VarChar(20) 
    ano Int
    versao String @db.VarChar(20)
    combustivel Combustivel
    cambio Cambio
    qtd_lugares Int
    cv Int
    cc Int
    portas Int?
    idMarca Marca @relation(fields: [id_marca], references: [id])
    id_marca String @unique
    anuncio Anuncio []

    @@map("modelo")
}

enum Combustivel {
    g 
    a 
    d 
    e 
    h 
    f

    @@map("combustivel")
}

enum Cambio {
    m 
    a 
    e 
}

model Estado {
    uf String @id @db.VarChar(2)
    nome String @db.VarChar(30)
    cidade Cidade []

    @@map("estado")
}

model Cidade {
    id Int @id @default(autoincrement())
    nome String @db.VarChar(100)
    estado Estado @relation(fields: [id_estado], references: [uf])
    id_estado String @db.VarChar(2)
    anuncio Anuncio []

    @@map("cidade")
}

model Usuario {
    cpf String @id @db.VarChar(11)
    nome String @db.VarChar(50)
    tipo Tipo 
    email String @db.VarChar(100)
    senha String @db.VarChar(100)

    comprador InteresseCompra[]
    anuncio Anuncio[]

    @@map("usuario")
}

enum Tipo {
    adm
    com
}

model Anuncio {
    id Int @id @default(autoincrement())
    id_usuario String
    id_cidade Int
    usuario Usuario @relation(fields: [id_usuario], references: [cpf])
    cidade Cidade @relation(fields: [id_cidade], references: [id])

    descricao String
    preco Float
    telefone String @db.VarChar(11)
    dt_criacao DateTime @default(now())
    aprovado Boolean @default(false)
    compra InteresseCompra[]
    foto String @unique

    placa String @db.VarChar(7)
    km Int
    gnv Boolean
    cor String @db.VarChar(20)
    novo Boolean
    id_modelo Int
    modelo Modelo @relation(fields: [id_modelo], references: [id])

    @@map("anuncio")
}

model InteresseCompra {
    id_anuncio Int
    cpf_interessado String @db.VarChar(11)
    interessado Usuario @relation(fields: [cpf_interessado], references: [cpf])
    anuncio Anuncio @relation(fields: [id_anuncio], references: [id])

    @@id([id_anuncio, cpf_interessado])
    @@map("interesse_compra")
}